


docker login --username chenyecr2 --password 5d+FLolpO8fRNYE3IgYcnTaPFcJtuyVu chenyecr2.azurecr.cn

docker login --username chenyecr --password GfSSY4hWiHDQRvFtDRDGYh=Krsf0kHjZ chenyecr.azurecr.io

docker login --username chenyeus --password hT=QswD2ZkLsVPpFeLqocJ7NJeSXA4A9 chenyeus.azurecr.io

docker login --username v-yeche@microsoft.com --password Ryan=Lindsayc5 registry-1.docker.io/V2/


docker login --username chenyecr --password-stdin chenyecr.azurecr.cn


docker push chenyecr.azurecr.cn/aci-helloworld:v1

docker login --username=edwardchenye --password Ryan=Lindsayc5 https://hub.docker.com


articles/virtual-machines/linux/compute-benchmark-scores.md
includes/virtual-machines-common-allocation-failure.md
includes/virtual-machines-common-sizes-memory.md


Register-AzureRmResourceProvider -ProviderNamespace Microsoft.ContainerInstance/contaierGroups

Register-AzureRmResourceProvider -ProviderNamespace Microsoft.ContainerInstance

---------------------------------------

$registry = New-AzureRMContainerRegistry -ResourceGroupName "ChenYeNewRG" -Name "myContainerRegistry007" -EnableAdminUser -Sku Basic

$creds = Get-AzureRmContainerRegistryCredential -Registry $registry

$creds.Password | docker login $registry.LoginServer -u $creds.Username --password-stdin


$image = $registry.LoginServer + "/aci-helloworld:v2"


$secpasswd = ConvertTo-SecureString $creds.Password -AsPlainText -Force
$pscred = New-Object System.Management.Automation.PSCredential($creds.Username, $secpasswd)

$dnsname = "aci-demo-" + (Get-Random -Maximum 9999)


New-AzureRmContainerGroup -ResourceGroup ChenYeNewRG -Name "mycontainer" -Image $image -RegistryCredential $pscred -Cpu 1 -MemoryInGB 1 -DnsNameLabel $dnsname


-----------------------------------------CLI
az group create --name ChenYeRG --location chinanorth

az acr create --resource-group ChenYeRG --name myContainerRegistry008 --sku Basic

az acr login --name myContainerRegistry008


az acr list --resource-group ChenYeRG --query "[].{acrLoginServer:loginServer}" --output table

docker tag microsoft/aci-helloworld chenyecr2.azurecr.cn/aci-helloworld:v1

docker push chenyecr2.azurecr.cn/aci-helloworld:v1

az acr repository list --name myContainerRegistry008 --output table

az acr repository show-tags --name myContainerRegistry008 --repository aci-helloworld --output table

az acr update --name myContainerRegistry008 --admin-enabled true

az acr credential show --name myContainerRegistry008 --query "passwords[0].value"


az container create --resource-group ChenYeRG --name acr-quickstart --image mycontainerregistry008.azurecr.cn/aci-helloworld:v3 --cpu 1 --memory 1 --registry-username myContainerRegistry008 --registry-password bx1Mlkh7/2AzDmippSYkrGP2M4jP4Ihn --dns-name-label aci-demo --ports 80


container-registry-get-started-docker-cli

az acr update --name chenyecr --sku Premium

docker tag nginx chenyecr.azurecr.io/nginx

docker push chenyecr.azurecr.cn/samples/nginx

docker tag nginx chenyecr.azurecr.io/samples/nginx

docker push chenyecr.azurecr.io/samples/nginx

az acr build --registry chenyecr --image  helloacrbuild:v1 .


docker run -it --rm -p 8080:80 chenyecr.azurecr.cn/samples/nginx


docker rmi chenyecr.azurecr.cn/samples/nginx

az acr repository delete --name chenyecr --repository samples/nginx --tag latest --manifest


container-registry-repositories
-----------------------------------
docker push chenyecr.azurecr.cn/samples/nginx


az acr webhook create --registry chenyecr --name myacrwebhook01 --actions delete --uri http://webhookuri.com


az acr webhook ping --registry chenyecr --name myacrwebhook01

az acr webhook list-events --registry chenyecr --name myacrwebhook01

az acr webhook delete --registry chenyecr --name myacrwebhook01




#!/bin/bash

# Modify for your environment. The ACR_NAME is the name of your Azure Container
# Registry, and the SERVICE_PRINCIPAL_NAME can be any unique name within your
# subscription (you can use the default below).
$ACR_NAME = "chenyecr"
$SERVICE_PRINCIPAL_NAME="acr-service-principal"

# Obtain the full registry ID for subsequent command args
$ACR_REGISTRY_ID=$(az acr show --name $ACR_NAME --query id --output tsv)

# Create the service principal with rights scoped to the registry.
# Default permissions are for docker pull access. Modify the '--role'
# argument value as desired:
# reader:      pull only
# contributor: push and pull
# owner:       push, pull, and assign roles
$SP_PASSWD=$(az ad sp create-for-rbac --name $SERVICE_PRINCIPAL_NAME --scopes $ACR_REGISTRY_ID --role reader --query password --output tsv)
$SP_APP_ID=$(az ad sp show --id http://$SERVICE_PRINCIPAL_NAME --query appId --output tsv)

# Output the service principal's credentials; use these in your services and
# applications to authenticate to the container registry.
echo "Service principal ID: $SP_APP_ID"  a1360fb5-bfc9-4d96-b0f0-defa5a56c42e
echo "Service principal password: $SP_PASSWD"   61231055-4417-4b9d-9c7b-28b48a016ff9



#!/bin/bash

# Modify for your environment. The ACR_NAME is the name of your Azure Container
# Registry, and the SERVICE_PRINCIPAL_ID is the service principal's 'appId' or
# one of its 'servicePrincipalNames' values.
$ACR_NAME="chenyecr"
$SERVICE_PRINCIPAL_ID="a1360fb5-bfc9-4d96-b0f0-defa5a56c42e"

# Populate value required for subsequent command args
$ACR_REGISTRY_ID=$(az acr show --name $ACR_NAME --query id --output tsv)

# Assign the desired role to the service principal. Modify the '--role' argument
# value as desired:
# reader:      pull only
# contributor: push and pull
# owner:       push, pull, and assign roles
az role assignment create --assignee $SERVICE_PRINCIPAL_ID --scope $ACR_REGISTRY_ID --role reader


az container create `
    --resource-group ChenYeNewRG `
    --name mycontainer `
    --image chenyecr.azurecr.cn/samples/nginx:v2 `
    --registry-login-server chenyecr.azurecr.cn `
    --registry-username a1360fb5-bfc9-4d96-b0f0-defa5a56c42e `
    --registry-password 61231055-4417-4b9d-9c7b-28b48a016ff9
	
	
	az acr show --name chenyecr --query "{acrLoginServer:loginServer}" --output table
	
docker build . -f ./AcrHelloworld/Dockerfile -t chenyecr.azurecr.cn/acr-helloworld:v2


----------------------------------
$ACR_NAME="chenyecr2"

$RES_GROUP=$ACR_NAME # Resource Group name

az group create --resource-group $RES_GROUP --location chinanorth
az acr create --resource-group $RES_GROUP --name $ACR_NAME --sku Standard --location chinanorth
	
az acr build --registry $ACR_NAME --image nginx .
